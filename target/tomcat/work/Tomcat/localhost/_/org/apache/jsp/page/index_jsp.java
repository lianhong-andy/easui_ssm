/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-11-12 16:55:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.page;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Title</title>\r\n");
      out.write("</head>\r\n");
      out.write("<script src=\"../js/jquery.min.js\"></script>\r\n");
      out.write("<script src=\"../js/jquery.easyui.min.js\"></script>\r\n");
      out.write("<script src=\"../js/locale/easyui-lang-zh_CN.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../js/themes/default/easyui.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../js/themes/icon.css\">\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("    /*//ready方法为文档加载时就发生\r\n");
      out.write("    $(document).ready(function () {\r\n");
      out.write("        //绑定搜索事件\r\n");
      out.write("        // $('#btn_Search').bind('click', search_click);\r\n");
      out.write("        $.ajax({\r\n");
      out.write("\r\n");
      out.write("            //类型为get，是要从数据库获取数据，\r\n");
      out.write("\r\n");
      out.write("            type: \"GET\",\r\n");
      out.write("\r\n");
      out.write("            //获取数据的地址，此地址为对应的controller,去执行对应的controller,MVC里的controller相当于三层中的U层\r\n");
      out.write("            url: \"/admin/findAll\",\r\n");
      out.write("\r\n");
      out.write("            //连同请求发送到服务器的数据，请求参数\r\n");
      out.write("            // data: \"&applicant=\" + 001,\r\n");
      out.write("\r\n");
      out.write("            //返回的数据类型为json类型\r\n");
      out.write("            dataType: \"json\",\r\n");
      out.write("\r\n");
      out.write("            //当controller 请求服务器成功时执行,参数data为返回的数据\r\n");
      out.write("            success: function (data) {\r\n");
      out.write("                //定义数组变量，存放着datagrid各列的ID\r\n");
      out.write("                var data1 = [];\r\n");
      out.write("\r\n");
      out.write("                //循环向data1里添加数据\r\n");
      out.write("                for (var i = 0; i < data.length; i++) {\r\n");
      out.write("                    data1.push({ \"code_number\": data[i].code_number, \"start_stop\": data[i].start_stop, \"startTime\": data[i].startTime, \"totalTime\": data[i].totalTime, \"swz\": data[i].swz, \"wz\": data[i].wz, \"bz\": data[i].bz})\r\n");
      out.write("                }\r\n");
      out.write("\r\n");
      out.write("                //在表格中加载数据，dg是datagrid 的ID\r\n");
      out.write("                $('#dg').datagrid(\"loadData\", data1);\r\n");
      out.write("            }\r\n");
      out.write("        })\r\n");
      out.write("    });*/\r\n");
      out.write("    $(function () {\r\n");
      out.write("        $(\"#table_grid\").datagrid({\r\n");
      out.write("            url:\"http://localhost/admin/findAll\",//访问后台获取表格回显数据\r\n");
      out.write("            columns:[[\r\n");
      out.write("                {field:'code_number',title:'车次',width:100,checkbox:true},//复选框，可以选中多行\r\n");
      out.write("                {field:'start_stop',title:'出发站到<br>到达站',width:100},\r\n");
      out.write("                {field:'startTime',title:'触发时间<br>到达时间',width:100},\r\n");
      out.write("                {field:'totalTime',title:'历时',width:100},\r\n");
      out.write("                {field:'swz',title:'商务座',width:100},\r\n");
      out.write("                {field:'wz',title:'无座',width:100},\r\n");
      out.write("                {field:'bz',title:'备注',width:100}\r\n");
      out.write("            ]],\r\n");
      out.write("            // fit:true//自适应表格body\r\n");
      out.write("            onLoadSuccess:function () {//事件加载完之后触发事件\r\n");
      out.write("                $(\"#btn1\").linkbutton({//添加按钮\r\n");
      out.write("                    iconCls: 'icon-add'\r\n");
      out.write("                }), $(\"#btn2\").linkbutton({//添加按钮\r\n");
      out.write("                    iconCls: 'icon-add'\r\n");
      out.write("                }),$(\"#btn3\").linkbutton({//添加按钮\r\n");
      out.write("                    iconCls: 'icon-add'\r\n");
      out.write("                }),$(\"#btn4\").linkbutton({//添加按钮\r\n");
      out.write("                    iconCls: 'icon-add'\r\n");
      out.write("                }),$(\"#btn5\").linkbutton({//添加按钮\r\n");
      out.write("                    iconCls: 'icon-add'\r\n");
      out.write("                }),$(\"#btn6\").linkbutton({//添加按钮\r\n");
      out.write("                    iconCls: 'icon-add'\r\n");
      out.write("                }),$(\"#btn7\").linkbutton({//添加按钮\r\n");
      out.write("                    iconCls: 'icon-add'\r\n");
      out.write("                }),$(\"#btn8\").linkbutton({//添加按钮\r\n");
      out.write("                    iconCls: 'icon-add'\r\n");
      out.write("                })\r\n");
      out.write("            },\r\n");
      out.write("            toolbar:[{\r\n");
      out.write("                iconCls:'icon-edit',\r\n");
      out.write("                text:'编辑',\r\n");
      out.write("                handle:function () {\r\n");
      out.write("\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            {\r\n");
      out.write("                iconCls:'icon-add',\r\n");
      out.write("                text:'添加',\r\n");
      out.write("                handle:function () {\r\n");
      out.write("\r\n");
      out.write("                }\r\n");
      out.write("            },\r\n");
      out.write("            {\r\n");
      out.write("                iconCls:'icon-search',\r\n");
      out.write("                text:'查询',\r\n");
      out.write("                handle:function () {\r\n");
      out.write("\r\n");
      out.write("                }\r\n");
      out.write("            }],\r\n");
      out.write("            loadMsg:\"正在努力加载，请耐心等候哦\",\r\n");
      out.write("            singleSelect:true,//只允许选中一行\r\n");
      out.write("            fitColumns:true,//自适应\r\n");
      out.write("            pagination:true,//显示分页\r\n");
      out.write("            rownumbers:true//显示编号\r\n");
      out.write("        })\r\n");
      out.write("    })\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("    <table id=\"table_grid\"></table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
